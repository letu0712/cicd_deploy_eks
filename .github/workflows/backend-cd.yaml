name: backend-cd

on:
  pull_request:
    branches:
      - main

env:
  PYTHON_VER: 3.12
  IMAGE_REPO_BE: backend
  IMAGE_TAG: latest

jobs:
  run-lint-test:
    name: Run lint and test backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      
      - name: Setup python environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VER}}
      
      - name: Install pipenv
        run: |
          pip install pipenv
          pip install flake8
      
      - name: Install dependencies package
        run: |
          pipenv install
      
      - name: Run lint
        run: |
          pipenv run lint
          pipenv run test
  build-deploy:
    name: Build, tag and push docker image to aws ecr
    runs-on: ubuntu-latest
    needs: [run-lint-test]
    defaults:
      run: 
        working-directory: ./starter/backend
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Configure AWS credential using action
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1

      - name: Login AWS ECR using action
        uses: aws-actions/amazon-ecr-login@v2
        with: 
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1

      - name: Build, tag and push docker image to AWS ECR
        run: |
          docker build -t ${{env.IMAGE_REPO_BE}} .
          docker tag ${{env.IMAGE_REPO_BE}}:${{env.IMAGE_TAG}} ${{vars.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_REPO_BE}}:${{env.IMAGE_TAG}}
          docker push ${{vars.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_REPO_BE}}:${{env.IMAGE_TAG}}


      - name: Update kubeconfig, deploy to AWS EKS
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
          cd k8s
          kustomize edit set image backend=${{vars.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_REPO_BE}}:${{env.IMAGE_TAG}}
          kustomize build | kubectl apply -f -